Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_udivmodsi4.o)
                              ./rf12.o (__udivmodsi4)
/usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_divmodsi4.o)
                              ./rf12.o (__divmodsi4)
/usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o (exit)
/usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
/usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_fixunssfsi.o)
                              ./hd44780.o (__fixunssfsi)
/usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_addsub_sf.o)
                              /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_fixunssfsi.o) (__subsf3)
/usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_mul_sf.o)
                              ./hd44780.o (__mulsf3)
/usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_div_sf.o)
                              ./hd44780.o (__divsf3)
/usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_gt_sf.o)
                              ./hd44780.o (__gtsf2)
/usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_ge_sf.o)
                              /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_fixunssfsi.o) (__gesf2)
/usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_lt_sf.o)
                              ./hd44780.o (__ltsf2)
/usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_sf_to_si.o)
                              /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_fixunssfsi.o) (__fixsfsi)
/usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_thenan_sf.o)
                              /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_addsub_sf.o) (__thenan_sf)
/usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_prologue.o)
                              /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_addsub_sf.o) (__prologue_saves__)
/usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_epilogue.o)
                              /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_addsub_sf.o) (__epilogue_restores__)
/usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_pack_sf.o)
                              /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_addsub_sf.o) (__pack_f)
/usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_unpack_sf.o)
                              /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_addsub_sf.o) (__unpack_f)
/usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_fpcmp_parts_sf.o)
                              /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_gt_sf.o) (__fpcmp_parts_f)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
LOAD ./hd44780.o
LOAD ./main.o
LOAD ./rf12.o
LOAD /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x1f88
 *(.vectors)
 .vectors       0x00000000       0x26 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000026                . = ALIGN (0x2)
                0x00000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000026        0x0 linker stubs
 *(.trampolines*)
                0x00000026                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000026                __ctors_start = .
 *(.ctors)
                0x00000026                __ctors_end = .
                0x00000026                __dtors_start = .
 *(.dtors)
                0x00000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000026        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
                0x00000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000026        0xc /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000032       0x16 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_copy_data.o)
                0x00000032                __do_copy_data
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000048        0x4 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x0000004c        0x2 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
                0x0000004c                __vector_1
                0x0000004c                __vector_12
                0x0000004c                __bad_interrupt
                0x0000004c                __vector_6
                0x0000004c                __vector_3
                0x0000004c                __vector_11
                0x0000004c                __vector_13
                0x0000004c                __vector_17
                0x0000004c                __vector_7
                0x0000004c                __vector_5
                0x0000004c                __vector_4
                0x0000004c                __vector_9
                0x0000004c                __vector_2
                0x0000004c                __vector_15
                0x0000004c                __vector_8
                0x0000004c                __vector_14
                0x0000004c                __vector_10
                0x0000004c                __vector_16
                0x0000004c                __vector_18
 .text          0x0000004e      0xaf6 ./hd44780.o
                0x0000004e                _LCD_OutNibble
                0x00000132                _LCD_Write
                0x0000032a                LCD_WriteCommand
                0x00000354                LCD_WriteData
                0x0000037e                LCD_WriteText
                0x000003ba                LCD_GoTo
                0x0000041e                LCD_Clear
                0x00000534                LCD_Home
                0x0000064a                LCD_Initalize
                0x00000b0e                LCD_ClearLine
 .text          0x00000b44      0x1bc ./main.o
                0x00000b44                main
                0x00000c74                receive
                0x00000cbe                send
 .text          0x00000d00      0x658 ./rf12.o
                0x00000d00                rf12_trans
                0x00000f6c                rf12_init
                0x000010ce                rf12_setbandwidth
                0x00001132                rf12_setfreq
                0x0000117a                rf12_setbaud
                0x000011f6                rf12_setpower
                0x00001236                rf12_ready
                0x0000126c                rf12_txdata
                0x000012f2                rf12_rxdata
 .text          0x00001358        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_udivmodsi4.o)
 .text          0x00001358        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_divmodsi4.o)
 .text          0x00001358        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
 .text          0x00001358        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_copy_data.o)
 .text          0x00001358       0x52 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_fixunssfsi.o)
                0x00001358                __fixunssfsi
 .text          0x000013aa      0x340 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_addsub_sf.o)
                0x0000164a                __addsf3
                0x00001696                __subsf3
 .text          0x000016ea      0x1c0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_mul_sf.o)
                0x000016ea                __mulsf3
 .text          0x000018aa      0x13c /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_div_sf.o)
                0x000018aa                __divsf3
 .text          0x000019e6       0x54 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_gt_sf.o)
                0x000019e6                __gtsf2
 .text          0x00001a3a       0x54 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_ge_sf.o)
                0x00001a3a                __gesf2
 .text          0x00001a8e       0x54 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_lt_sf.o)
                0x00001a8e                __ltsf2
 .text          0x00001ae2       0x98 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_sf_to_si.o)
                0x00001ae2                __fixsfsi
 .text          0x00001b7a        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_thenan_sf.o)
 .text          0x00001b7a        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_prologue.o)
 .text          0x00001b7a        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_epilogue.o)
 .text          0x00001b7a      0x182 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_pack_sf.o)
                0x00001b7a                __pack_f
 .text          0x00001cfc       0xde /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_unpack_sf.o)
                0x00001cfc                __unpack_f
 .text          0x00001dda       0xc2 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_fpcmp_parts_sf.o)
                0x00001dda                __fpcmp_parts_f
                0x00001e9c                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc.mul
                0x00001e9c        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_udivmodsi4.o)
 .text.libgcc.div
                0x00001e9c       0x44 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_udivmodsi4.o)
                0x00001e9c                __udivmodsi4
 .text.libgcc   0x00001ee0        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_udivmodsi4.o)
 .text.libgcc.prologue
                0x00001ee0        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_udivmodsi4.o)
 .text.libgcc.builtins
                0x00001ee0        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fmul
                0x00001ee0        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_udivmodsi4.o)
 .text.libgcc.mul
                0x00001ee0        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_divmodsi4.o)
 .text.libgcc.div
                0x00001ee0       0x36 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_divmodsi4.o)
                0x00001ee0                __divmodsi4
 .text.libgcc   0x00001f16        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_divmodsi4.o)
 .text.libgcc.prologue
                0x00001f16        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_divmodsi4.o)
 .text.libgcc.builtins
                0x00001f16        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_divmodsi4.o)
 .text.libgcc.fmul
                0x00001f16        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_divmodsi4.o)
 .text.libgcc.mul
                0x00001f16        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00001f16        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x00001f16        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00001f16        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00001f16        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00001f16        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00001f16        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00001f16        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x00001f16        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00001f16        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00001f16        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00001f16        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00001f16        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_prologue.o)
 .text.libgcc.div
                0x00001f16        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_prologue.o)
 .text.libgcc   0x00001f16        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_prologue.o)
 .text.libgcc.prologue
                0x00001f16       0x38 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_prologue.o)
                0x00001f16                __prologue_saves__
 .text.libgcc.builtins
                0x00001f4e        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_prologue.o)
 .text.libgcc.fmul
                0x00001f4e        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_prologue.o)
 .text.libgcc.mul
                0x00001f4e        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_epilogue.o)
 .text.libgcc.div
                0x00001f4e        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_epilogue.o)
 .text.libgcc   0x00001f4e        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_epilogue.o)
 .text.libgcc.prologue
                0x00001f4e       0x36 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_epilogue.o)
                0x00001f4e                __epilogue_restores__
 .text.libgcc.builtins
                0x00001f84        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_epilogue.o)
 .text.libgcc.fmul
                0x00001f84        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_epilogue.o)
                0x00001f84                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00001f84        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
                0x00001f84                exit
                0x00001f84                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00001f84        0x4 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x00001f88                _etext = .

.data           0x00800060       0x4c load address 0x00001f88
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
 .data          0x00800060        0x0 ./hd44780.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 ./rf12.o
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_udivmodsi4.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_divmodsi4.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_fixunssfsi.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_addsub_sf.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_mul_sf.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_div_sf.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_gt_sf.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_ge_sf.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_lt_sf.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_sf_to_si.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_thenan_sf.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_prologue.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_epilogue.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_pack_sf.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_unpack_sf.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_fpcmp_parts_sf.o)
 *(.data*)
 *(.rodata)
 .rodata        0x00800060       0x43 ./main.o
 .rodata        0x008000a3        0x8 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_thenan_sf.o)
                0x008000a3                __thenan_sf
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x008000ac                . = ALIGN (0x2)
 *fill*         0x008000ab        0x1 00
                0x008000ac                _edata = .
                0x008000ac                PROVIDE (__data_end, .)

.bss            0x008000ac        0x0
                0x008000ac                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x008000ac        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
 .bss           0x008000ac        0x0 ./hd44780.o
 .bss           0x008000ac        0x0 ./main.o
 .bss           0x008000ac        0x0 ./rf12.o
 .bss           0x008000ac        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_udivmodsi4.o)
 .bss           0x008000ac        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_divmodsi4.o)
 .bss           0x008000ac        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
 .bss           0x008000ac        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_copy_data.o)
 .bss           0x008000ac        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_fixunssfsi.o)
 .bss           0x008000ac        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_addsub_sf.o)
 .bss           0x008000ac        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_mul_sf.o)
 .bss           0x008000ac        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_div_sf.o)
 .bss           0x008000ac        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_gt_sf.o)
 .bss           0x008000ac        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_ge_sf.o)
 .bss           0x008000ac        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_lt_sf.o)
 .bss           0x008000ac        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_sf_to_si.o)
 .bss           0x008000ac        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_thenan_sf.o)
 .bss           0x008000ac        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_prologue.o)
 .bss           0x008000ac        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_epilogue.o)
 .bss           0x008000ac        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_pack_sf.o)
 .bss           0x008000ac        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_unpack_sf.o)
 .bss           0x008000ac        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_fpcmp_parts_sf.o)
 *(.bss*)
 *(COMMON)
                0x008000ac                PROVIDE (__bss_end, .)
                0x00001f88                __data_load_start = LOADADDR (.data)
                0x00001fd4                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008000ac        0x0
                0x008000ac                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008000ac                PROVIDE (__noinit_end, .)
                0x008000ac                _end = .
                0x008000ac                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x2124
 *(.stab)
 .stab          0x00000000      0x6cc /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
 .stab          0x000006cc      0xd5c ./hd44780.o
                                0xd68 (size before relaxing)
 .stab          0x00001428      0x450 ./main.o
                                0x618 (size before relaxing)
 .stab          0x00001878      0x8ac ./rf12.o
                                0xa74 (size before relaxing)

.stabstr        0x00000000      0xc48
 *(.stabstr)
 .stabstr       0x00000000      0xc48 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x11
 *(.comment)
 .comment       0x00000000       0x11 ./hd44780.o
                                 0x12 (size before relaxing)
 .comment       0x00000000       0x12 ./main.o
 .comment       0x00000000       0x12 ./rf12.o
 .comment       0x00000000       0x12 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_fixunssfsi.o)
 .comment       0x00000000       0x12 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_addsub_sf.o)
 .comment       0x00000000       0x12 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_mul_sf.o)
 .comment       0x00000000       0x12 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_div_sf.o)
 .comment       0x00000000       0x12 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_gt_sf.o)
 .comment       0x00000000       0x12 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_ge_sf.o)
 .comment       0x00000000       0x12 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_lt_sf.o)
 .comment       0x00000000       0x12 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_sf_to_si.o)
 .comment       0x00000000       0x12 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_thenan_sf.o)
 .comment       0x00000000       0x12 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_pack_sf.o)
 .comment       0x00000000       0x12 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_unpack_sf.o)
 .comment       0x00000000       0x12 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_fpcmp_parts_sf.o)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(indoor3.elf elf32-avr)
LOAD linker stubs
